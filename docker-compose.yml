version: '3'

x-variables:
  - &environment_mysql_root_password MYSQL_ROOT_PASSWORD=database
  - &volume_wiki_images wiki-images:/var/www/html/images

services:

  # Note that BackstopJS testing will only work for the default values
  # WIKI_DOMAIN=wiki.local and WIKI_PORT=80

  wiki:
    image: ghcr.io/tib-hannover/smw-crc1153:test
    build: ./context
    ports:
      - ${WIKI_PORT:-80}:80
    volumes:
      - wiki-data:/data
      - *volume_wiki_images
      - ./backstop/backstop_data:/var/www/html/backstop
    environment:
      - WIKI_DOMAIN=${WIKI_DOMAIN:-wiki.local}
      - WIKI_PORT=${WIKI_PORT:-80}
      - ELASTICSEARCH_HOST=elasticsearch
      - MYSQL_HOST

  # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker
  elasticsearch:
    image: elasticsearch:6.8.23
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  mysql:
    image: mysql:5
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: database
    profiles:
      - mysql

  backup:
    image: ghcr.io/gesinn-it-pub/mediawiki-backup:${MEDIAWIKI_BACKUP_VERSION:-latest}
    volumes:
      - ./backup:/backup
      - *volume_wiki_images
    environment:
      - MYSQL_HOST=mysql
      - *environment_mysql_root_password
      - OWNER=${OWNER:-1000}
    profiles:
      - no-up

  backstop:
    image: backstopjs/backstopjs:6.0.4
    volumes:
      - ./backstop:/src
    links:
      - wiki:wiki.local
    profiles:
      - no-up

  wait-for-wiki:
    image: mintel/docker-wait-for-it
    entrypoint: ['/opt/wait-for-it.sh', 'wiki:80', '-t', '120']
    profiles:
      - no-up

volumes:
  wiki-data:
  wiki-images:
  elasticsearch-data:
  mysql-data:
